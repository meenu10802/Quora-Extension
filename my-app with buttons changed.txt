console.log("Content script loaded 1");
if (window.location.host === 'www.quora.com' || window.location.host === 'x.com') {
  observeAndClickMoreButtons();
}

function observeAndClickMoreButtons() {
  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.click();
        observer.unobserve(entry.target);
      }
    });
  });

  // Function to observe elements on Quora
  function observeQuoraMoreButtons() {
    let allMore = document.querySelectorAll(".qt_read_more");
    allMore.forEach((more) => observer.observe(more));

    const mutationObserver = new MutationObserver(() => {
      let newMore = document.querySelectorAll(".qt_read_more:not(.observed)");
      newMore.forEach((more) => {
        more.classList.add("observed");
        observer.observe(more);
      });
    });

    mutationObserver.observe(document.body, { childList: true, subtree: true });
  }

  // Function to observe elements on Twitter
  function observeTwitterMoreButtons() {
    let allMore = document.querySelectorAll("span.css-1jxf684.r-bcqeeo.r-1ttztb7.r-qvutc0.r-poiln3");
    allMore.forEach((more) => observer.observe(more));

    const mutationObserver = new MutationObserver(() => {
      let newMore = document.querySelectorAll("span.css-1jxf684.r-bcqeeo.r-1ttztb7.r-qvutc0.r-poiln3:not(.observed)");
      newMore.forEach((more) => {
        more.classList.add("observed");
        observer.observe(more);
      });
    });

    mutationObserver.observe(document.body, { childList: true, subtree: true });
  }

  // Call the appropriate function based on the host
  if (window.location.host === 'www.quora.com') {
    observeQuoraMoreButtons();
  } else if (window.location.host === 'x.com') {
    observeTwitterMoreButtons();
  }
}
document.addEventListener("click", function (event) {  //1st 
  const target = event.target;
  console.log(target)
  if (window.location.host === 'www.quora.com') {
    quoraPage(target)
  }

  else if (window.location.host === 'in.pinterest.com') {
    pintrestPage(target)
  }
  else if (window.location.host === 'www.linkedin.com') {
    linkedinPage(target)
  }
  else if (window.location.host === 'dev.to') {
    devPage(target)
  }
  else if (window.location.host === 'www.producthunt.com') {
    productHuntPage(target)
  }
  else if (window.location.host === 'substack.com') {
    subStackPage(target)
  }
  else if (window.location.host === 'x.com') {
    twitterPage(target)
  }


});
function quoraPage(target) {  //2nd
  if (target.classList.contains("section")) {   //single element that triggered the event.
    displayContentQuora(target); //if target= section go to displayContent
  }
  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log("2nd step after going into addEventlisterber", target);  //target=funny

    let a = target.parentElement.parentElement.parentElement.parentElement.parentElement;
    let question = a.querySelector(".puppeteer_test_question_title").innerText;

    let more = a.querySelector(".qt_read_more");
    more?.click();

    let answer = a.querySelector(".puppeteer_test_answer_content").innerText;
    console.log(answer);
    console.log(question);
    let tone = target.textContent;

    let prompt = `You are a Quora writer agent, your job is to read this question: "${question}" and now for answer: "${answer}", write a comment for this answer with a ${tone} tone`;

    postData("https://64.227.141.202:3000", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          let commentBox = target.parentElement.querySelector(".section");
          typeTextSlowly(commentBox, data.data);
        }
      }
    );
  }
}
function linkedinPage(target) {
  if (
    target.classList.contains("artdeco-button__text") ||
    target.classList.contains("artdeco-button__icon") ||
    target.classList.contains("artdeco-button") ||
    target.classList.contains("comments-comment-box")
  ) {
    const commentBoxes = document.querySelectorAll(".comments-comment-box"); //full document m se select this "comments-comment-box"
    commentBoxes.forEach((box) => displayContentLinkedn(box));  //iterate over all comment box 
  }
  console.log("2nd step", target) //target= artdeco-button__icon 

  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log("if target is section go to displayContent", target); //target=funny

    let a = target.parentElement.parentElement.parentElement.parentElement;

    let questionElement = a.querySelector(".update-components-text, .relative.update-components-update-v2__commentary");
    let question = questionElement ? questionElement.innerText : null;
    console.log(question);

    let tone = target.textContent;

    let prompt = `You are a Quora writer agent, your job is to read this question: "${question}" and  write a comment for this answer with a ${tone} tone`;

    postData("https://visitsaudiai.com/api/v1/llm", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          //let commentBox = target.parentElement.querySelector(".section");
          let full = target.parentElement.parentElement.parentElement.querySelector(".comments-comment-box");
          let pElement = full.querySelector("p");
          typeTextSlowly(pElement, data.data);
        }
      }
    );
  }
}
function devPage(target) {
  if (target.classList.contains("crayons-textfield") &&
    target.classList.contains("comment-textarea") &&
    target.classList.contains("crayons-textfield--ghost")
  ) {
    const dropAreas = document.querySelectorAll('.comment-form__inner');
    dropAreas.forEach(dropArea => displayContentDev(dropArea));
  }

  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log("2nd step after going into addEventListener", target);
    let question = document.querySelector(".crayons-article__main").innerText;
    console.log(question)

    let title = document.querySelector(".crayons-article__header__meta").innerText;
    console.log(title);
    let tone = target.textContent;
    let prompt = `You are a Quora writer agent, your job is to read this question: "${question}" with the title: "${title}"  write a comment for with a ${tone} tone`;

    postData("https://visitsaudiai.com/api/v1/llm", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          let commentBox = document.querySelector(".comment-form__field");
          typeTextSlowly(commentBox, data.data);
        }
      }
    );
  }
}
function productHuntPage(target) {

  if (
    target.classList.contains("rta__textarea") ||
    target.classList.contains("styles_textArea__PGN9o")
  ) {
    const commentBoxes = document.querySelectorAll("div.styles_container__AOfdY.flex.flex-row.gap-3.pt-3.pb-5");
    commentBoxes.forEach((box) => displayContentProductHunt(box));
    console.log("2nd step", target);
  }
  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log(target);

    let title = document.querySelector('.styles_title__x5KUY').innerText;
    let caption = document.querySelector('.styles_tagline__svEiR').innerText;
    let content = document.querySelector('.styles_htmlText__eYPgj').innerText;
    console.log(title)
    console.log(caption)
    console.log(content)
    let tone = target.textContent;
    let prompt = `You are a  writer agent, your job is to read this content: "${content}" and now for title: "${title}" and caption:"${caption}" , write a comment for this post with a ${tone} tone`;

    postData("https://visitsaudiai.com/api/v1/llm", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          let commentBox = document.querySelector(".rta,.styles_container__YiaH6");
          typeTextSlowly(commentBox, data.data);
        }
      }
    );
  }
}

function twitterPage(target) {  //2nd
  if (
    target.classList.contains("notranslate") ||
    target.classList.contains("public-DraftEditor-content")
) {
    const commentBoxes = document.querySelectorAll(".notranslate.public-DraftEditor-content"); // Select all elements with the class "notranslate public-DraftEditor-content" in the full document
    commentBoxes.forEach((box) => displayContentTwitter(box));  
    console.log("twitterPage finished")// Iterate over all selected elements and call displayContentLinkedn for each box
}

  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log("2nd step after going into addEventlisterber", target);  //target=funny

    let a = target.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement;
    let question = a.querySelector('div[data-testid="tweetText"]');
    let question1=question.innerText
    console.log(question1)

    // let more = a.querySelector(".qt_read_more");
    // more?.click();

   
    // let tone = target.textContent;

    // let prompt = `You are a Quora writer agent, your job is to read this question: "${question}"  write a comment for this answer with a ${tone} tone`;

    // postData("http://64.227.141.202:3000", { prompt: prompt }).then(
    //   (data) => {
    //     console.log(data);
    //     if (data.success) {
    //       console.log(data.data);
    //       let commentBox = target.parentElement.querySelector(".section");
    //       typeTextSlowly(commentBox, data.data);
    //     }
    //   }
   // );
  }
}


function pintrestPage(target) {
  if (target.classList.contains("public-DraftStyleDefault-block") ||
    target.classList.contains("public-DraftStyleDefault-ltr") ||
    target.classList.contains("Jea") ||
    target.classList.contains("XbT") ||
    target.classList.contains("jar") ||
    target.classList.contains("jzS") ||
    target.classList.contains("rDA") ||
    target.classList.contains("ujU") ||
    target.classList.contains("zI7") ||
    target.classList.contains("iyn") ||
    target.classList.contains("Hsu")) {
    console.log("Pinterest element clicked");

    const element = document.querySelector("#gradient > div > div > div.ujU.zI7.iyn.Hsu > div > div > div > div > div > div > div > div > div > div.Jea.jzS.zI7.iyn.Hsu > div.qiB > div > div > div > div.a3i.snW.zI7.iyn.Hsu > div");
    console.log(element);
    displayContentPintrest(element);
    // displayContent2(target); // Attempt to append buttons to the clicked element
  }

  if (
    [
      "Funny",
      "Serious",
      "Helpful",
      "Disagree",
      "Strongly_Agree",
      "Insightful",
    ].some((cls) => target.classList.contains(cls))
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log(target);

    let a =
      target.parentElement.parentElement.parentElement.parentElement
        .parentElement;
    let question = a.querySelector(".puppeteer_test_question_title").innerText;

    let more = a.querySelector(".qt_read_more");
    more?.click();

    let answer = a.querySelector(".puppeteer_test_answer_content").innerText;
    console.log(answer);
    console.log(question);
    let tone = target.textContent;

    let prompt = `You are a Quora writer agent, your job is to read this question: "${question}" and now for answer: "${answer}", write a comment for this answer with a ${tone} tone`;

    postData("https://visitsaudiai.com/api/v1/llm", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          let commentBox = target.parentElement.querySelector(".section");
          typeTextSlowly(commentBox, data.data);
        }
      }
    );
  }
}
function subStackPage(target) {
  if  
    // (target.classList.contains('_editorContent_n0l68_44')||
    (target.classList.contains("tiptap ")||
     target.classList.contains("_feedCommentBodyInner_er99b_357") ||
     target.classList.contains(" ProseMirror"))
    // target.classList.contains("Disagree")||
    // target.classList.contains('pencraft') ||
    // target.classList.contains('pc-display-flex') ||
    // target.classList.contains('pc-flexDirection-column') ||
    // target.classList.contains('_flexGrow_1w60r_230') ||
    // target.classList.contains('pc-reset') ||
    // target.classList.contains('_textEditor_n0l68_1'))
    
    {
      displayContentSubstack(target);
      console.log("step 1 function page",target)
}
    
  if (
    target.classList.contains("Funny") ||
    target.classList.contains("Serious") ||
    target.classList.contains("Helpful") ||
    target.classList.contains("Disagree") ||
    target.classList.contains("Strongly_Agree") ||
    target.classList.contains("Insightful")
  ) {
    console.log(`Button ${target.classList} clicked`);
    console.log("2nd step after going into addEventlisterber", target);  //target=funny

    let a = target.parentElement.parentElement.parentElement.parentElement.parentElement;
    let question = a.querySelector(".puppeteer_test_question_title").innerText;

    let more = a.querySelector(".qt_read_more");
    more?.click();

    let answer = a.querySelector(".puppeteer_test_answer_content").innerText;
    console.log(answer);
    console.log(question);
    let tone = target.textContent;

    let prompt = `You are a Quora writer agent, your job is to read this question: "${question}" and now for answer: "${answer}", write a comment for this answer with a ${tone} tone`;

    postData( "http://64.227.141.202:3000", { prompt: prompt }).then(
      (data) => {
        console.log(data);
        if (data.success) {
          console.log(data.data);
          let commentBox = target.parentElement.querySelector(".section");
          typeTextSlowly(commentBox, data.data);
        }
      }
    );
  }
}

function appendButtonsToDiv(sectionElement, buttonStyle, buttonContainerStyle, button1Style,button5Style){
  let button1 = document.createElement("button");
  let button2 = document.createElement("button");
  let button3 = document.createElement("button");
  let button4 = document.createElement("button");
  let button5 = document.createElement("button");
  let button6 = document.createElement("button");

  button1.textContent = "Funny";
  button2.textContent = "Serious";
  button3.textContent = "Helpful";
  button4.textContent = "Disagree";
  button5.textContent = "Strongly Agree";
  button6.textContent = "Insightful";

  button1.classList.add("Funny");
  button2.classList.add("Serious");
  button3.classList.add("Helpful");
  button4.classList.add("Disagree");
  button5.classList.add("Strongly_Agree");
  button6.classList.add("Insightful");

  Object.assign(button1.style, buttonStyle,button1Style);
  Object.assign(button2.style, buttonStyle);
  Object.assign(button3.style, buttonStyle);
  Object.assign(button4.style, buttonStyle);
  Object.assign(button5.style, buttonStyle,button5Style);
  Object.assign(button6.style, buttonStyle);

  let buttonContainer = document.createElement("div");
  if(buttonContainerStyle){
    Object.assign(buttonContainer.style, buttonContainerStyle);
  }

  buttonContainer.appendChild(button1);
  buttonContainer.appendChild(button2);
  buttonContainer.appendChild(button3);
  buttonContainer.appendChild(button4);
  buttonContainer.appendChild(button5);
  buttonContainer.appendChild(button6);

  sectionElement.appendChild(buttonContainer);
}

function displayContentSubstack(target) {
  console.log("came to diplsayContentDev")
  let sectionElement = document.querySelector('.tiptap.ProseMirror._feedCommentBodyInner_er99b_357');
  console.log("CAME to display content");

if (sectionElement && !sectionElement.querySelector(".Funny")) {
  const buttonStyle = {
    backgroundColor: "#0077b5", 
    color: "white",
    border: "none",
    padding: "10px 20px",
    borderRadius: "20px",
    cursor: "pointer",
    margin: "5px",
    fontSize: "14px",
    fontWeight: "bold",
  };

  const buttonContainerStyle = {
    display: "flex",
    justifyContent: "center",
    flexWrap: "wrap",
    gap: "10px",
  };
  appendButtonsToDiv(sectionElement,buttonStyle, buttonContainerStyle);
  // let button1 = document.createElement("button");
  // let button2 = document.createElement("button");
  // let button3 = document.createElement("button");
  // let button4 = document.createElement("button");
  // let button5 = document.createElement("button");
  // let button6 = document.createElement("button");

  // button1.textContent = "Funny";
  // button2.textContent = "Serious";
  // button3.textContent = "Helpful";
  // button4.textContent = "Disagree";
  // button5.textContent = "Strongly Agree";
  // button6.textContent = "Insightful";

  // button1.classList.add("Funny");
  // button2.classList.add("Serious");
  // button3.classList.add("Helpful");
  // button4.classList.add("Disagree");
  // button5.classList.add("Strongly_Agree");
  // button6.classList.add("Insightful");

  // const buttonStyle = {
  //   backgroundColor: "#0077b5", // LinkedIn blue color
  //   color: "white",
  //   border: "none",
  //   padding: "10px 20px",
  //   borderRadius: "20px", // Rounded corners for bubble form
  //   cursor: "pointer",
  //   margin: "5px",
  //   fontSize: "14px",
  //   fontWeight: "bold",
  // };

  // const buttonContainerStyle = {
  //   display: "flex",
  //   justifyContent: "center",
  //   flexWrap: "wrap",
  //   gap: "10px",
  // };

  // Object.assign(button1.style, buttonStyle);
  // Object.assign(button2.style, buttonStyle);
  // Object.assign(button3.style, buttonStyle);
  // Object.assign(button4.style, buttonStyle);
  // Object.assign(button5.style, buttonStyle);
  // Object.assign(button6.style, buttonStyle);

  // let buttonContainer = document.createElement("div");
  // Object.assign(buttonContainer.style, buttonContainerStyle);

  // buttonContainer.appendChild(button1);
  // buttonContainer.appendChild(button2);
  // buttonContainer.appendChild(button3);
  // buttonContainer.appendChild(button4);
  // buttonContainer.appendChild(button5);
  // buttonContainer.appendChild(button6);

  // sectionElement.appendChild(buttonContainer);
}

}
function displayContentPintrest(target) {
  console.log("came to displayContent")
  let commentBox
  const sectionElement =
    commentBox.closest(".comments-comment-box") || commentBox.parentNode;

  if (sectionElement && !sectionElement.querySelector(".Funny")) {
    const button1 = document.createElement("button");
    const button2 = document.createElement("button");
    const button3 = document.createElement("button");
    const button4 = document.createElement("button");
    const button5 = document.createElement("button");
    const button6 = document.createElement("button");

    button1.textContent = "Funny";
    button2.textContent = "Serious";
    button3.textContent = "Helpful";
    button4.textContent = "Disagree";
    button5.textContent = "Strongly Agree";
    button6.textContent = "Insightful";

    button1.classList.add("Funny");
    button2.classList.add("Serious");
    button3.classList.add("Helpful");
    button4.classList.add("Disagree");
    button5.classList.add("Strongly_Agree");
    button6.classList.add("Insightful");

    const buttonStyle = {
      backgroundColor: "#b92b27",
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "5px",
      cursor: "pointer",
      margin: "5px",
    };

    const button1Style = {
      marginLeft: "70px",
    };
    const button5Style = {
      marginLeft: "70px",
    };

    Object.assign(button1.style, buttonStyle, button1Style);
    Object.assign(button2.style, buttonStyle);
    Object.assign(button3.style, buttonStyle);
    Object.assign(button4.style, buttonStyle);
    Object.assign(button5.style, buttonStyle, button5Style);
    Object.assign(button6.style, buttonStyle);

    sectionElement.insertAdjacentElement("afterend", button6);
    sectionElement.insertAdjacentElement("afterend", button5);
    sectionElement.insertAdjacentElement("afterend", button4);
    sectionElement.insertAdjacentElement("afterend", button3);
    sectionElement.insertAdjacentElement("afterend", button2);
    sectionElement.insertAdjacentElement("afterend", button1);

    console.log("Buttons inserted below comment box");
  }

}
function displayContentDev(target) {
  console.log("came to diplsayContentDev")
  let sectionElement;
  if (target.closest('.comment-form__inner')) {
    sectionElement =
      target.closest('.comment-form__inner');
    console.log("CAME to display content");
  }

  if (sectionElement && !sectionElement.querySelector(".Funny")) {
    let button1 = document.createElement("button");
    let button2 = document.createElement("button");
    let button3 = document.createElement("button");
    let button4 = document.createElement("button");
    let button5 = document.createElement("button");
    let button6 = document.createElement("button");

    button1.textContent = "Funny";
    button2.textContent = "Serious";
    button3.textContent = "Helpful";
    button4.textContent = "Disagree";
    button5.textContent = "Strongly Agree";
    button6.textContent = "Insightful";

    button1.classList.add("Funny");
    button2.classList.add("Serious");
    button3.classList.add("Helpful");
    button4.classList.add("Disagree");
    button5.classList.add("Strongly_Agree");
    button6.classList.add("Insightful");

    const buttonStyle = {
      backgroundColor: "#0077b5", // LinkedIn blue color
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "20px", // Rounded corners for bubble form
      cursor: "pointer",
      margin: "5px",
      fontSize: "14px",
      fontWeight: "bold",
    };

    const buttonContainerStyle = {
      display: "flex",
      justifyContent: "center",
      flexWrap: "wrap",
      gap: "10px",
    };

    Object.assign(button1.style, buttonStyle);
    Object.assign(button2.style, buttonStyle);
    Object.assign(button3.style, buttonStyle);
    Object.assign(button4.style, buttonStyle);
    Object.assign(button5.style, buttonStyle);
    Object.assign(button6.style, buttonStyle);

    let buttonContainer = document.createElement("div");
    Object.assign(buttonContainer.style, buttonContainerStyle);

    buttonContainer.appendChild(button1);
    buttonContainer.appendChild(button2);
    buttonContainer.appendChild(button3);
    buttonContainer.appendChild(button4);
    buttonContainer.appendChild(button5);
    buttonContainer.appendChild(button6);

    sectionElement.appendChild(buttonContainer);
  }
}
function displayContentLinkedn(target) {
  let sectionElement;
  if (target.closest(".comments-comment-box")) {
    sectionElement =
      target.closest(".comments-comment-box") || target.parentNode;
  }
  if (sectionElement && !sectionElement.parentElement.querySelector(".Funny")) { // sectionEle=whole comment box. If in the whole comment box "funny" is not there then only add those buttons
    let button1 = document.createElement("button");
    let button2 = document.createElement("button");
    let button3 = document.createElement("button");
    let button4 = document.createElement("button");
    let button5 = document.createElement("button");
    let button6 = document.createElement("button");

    button1.textContent = "Funny";
    button2.textContent = "Serious";
    button3.textContent = "Helpful";
    button4.textContent = "Disagree";
    button5.textContent = "Strongly Agree";
    button6.textContent = "Insightful";

    button1.classList.add("Funny");
    button2.classList.add("Serious");
    button3.classList.add("Helpful");
    button4.classList.add("Disagree");
    button5.classList.add("Strongly_Agree");
    button6.classList.add("Insightful");

    const buttonStyle = {
      backgroundColor: "#0077b5", // LinkedIn blue color
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "20px", // Rounded corners for bubble form
      cursor: "pointer",
      margin: "5px",
      fontSize: "14px",
      fontWeight: "bold",
    };

    const buttonContainerStyle = {
      display: "flex",
      justifyContent: "center",
      flexWrap: "wrap",
      gap: "10px",
    };

    Object.assign(button1.style, buttonStyle);
    Object.assign(button2.style, buttonStyle);
    Object.assign(button3.style, buttonStyle);
    Object.assign(button4.style, buttonStyle);
    Object.assign(button5.style, buttonStyle);
    Object.assign(button6.style, buttonStyle);

    let buttonContainer = document.createElement("div");
    Object.assign(buttonContainer.style, buttonContainerStyle);

    buttonContainer.appendChild(button1);
    buttonContainer.appendChild(button2);
    buttonContainer.appendChild(button3);
    buttonContainer.appendChild(button4);
    buttonContainer.appendChild(button5);
    buttonContainer.appendChild(button6);

    sectionElement.insertAdjacentElement("afterend", buttonContainer);

  }
}
function displayContentProductHunt(target) {
  console.log("came inside displayContent");
  let sectionElement;
  if (target.closest("div.styles_container__AOfdY.flex.flex-row.gap-3.pt-3.pb-5")) {
    sectionElement = target.closest("div.styles_container__AOfdY.flex.flex-row.gap-3.pt-3.pb-5");
    console.log("came inside this if condition");
  }
  if (sectionElement && !sectionElement.parentElement.querySelector(".Funny")) { // sectionEle=whole comment box. If in the whole comment box "funny" is not there then only add those buttons
    let button1 = document.createElement("button");
    let button2 = document.createElement("button");
    let button3 = document.createElement("button");
    let button4 = document.createElement("button");
    let button5 = document.createElement("button");
    let button6 = document.createElement("button");

    button1.textContent = "Funny";
    button2.textContent = "Serious";
    button3.textContent = "Helpful";
    button4.textContent = "Disagree";
    button5.textContent = "Strongly Agree";
    button6.textContent = "Insightful";

    button1.classList.add("Funny");
    button2.classList.add("Serious");
    button3.classList.add("Helpful");
    button4.classList.add("Disagree");
    button5.classList.add("Strongly_Agree");
    button6.classList.add("Insightful");

    const buttonStyle = {
      backgroundColor: "#0077b5", // LinkedIn blue color
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "20px", // Rounded corners for bubble form
      cursor: "pointer",
      margin: "5px",
      fontSize: "14px",
      fontWeight: "bold",
    };

    const buttonContainerStyle = {
      display: "flex",
      justifyContent: "center",
      flexWrap: "wrap",
      gap: "10px",
    };

    Object.assign(button1.style, buttonStyle);
    Object.assign(button2.style, buttonStyle);
    Object.assign(button3.style, buttonStyle);
    Object.assign(button4.style, buttonStyle);
    Object.assign(button5.style, buttonStyle);
    Object.assign(button6.style, buttonStyle);

    let buttonContainer = document.createElement("div");
    Object.assign(buttonContainer.style, buttonContainerStyle);

    buttonContainer.appendChild(button1);
    buttonContainer.appendChild(button2);
    buttonContainer.appendChild(button3);
    buttonContainer.appendChild(button4);
    buttonContainer.appendChild(button5);
    buttonContainer.appendChild(button6);

    sectionElement.insertAdjacentElement("afterend", buttonContainer);

  }

}
function displayContentQuora(target) {
  let sectionElement;

  if (target.closest(".section")) {
    sectionElement =
      target.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
        .parentNode;//the whole comment box
  }
  if (sectionElement && !sectionElement.parentElement.querySelector(".Funny")) { // sectionEle=whole comment box. If in the whole comment box "funny" is not there then only add those buttons
    
    const buttonStyle = {
      backgroundColor: "#b92b27",
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "5px",
      cursor: "pointer",
      margin: "5px",
    };

    const button1Style = {
      marginLeft: "70px",
    };
    const button5Style = {
      marginLeft: "70px",
    };
    appendButtonsToDiv(sectionElement,buttonStyle, null, button1Style,button5Style);
    
  }
}
function displayContentTwitter(target){
  console.log("came to dipslayContent")
  let sectionElement;

  if (target.closest(".notranslate.public-DraftEditor-content")) {
    sectionElement = target.closest(".notranslate.public-DraftEditor-content");
    console.log("came inside this if condition");
  }
  if (sectionElement && !sectionElement.parentElement.querySelector(".Funny")) { // sectionEle=whole comment box. If in the whole comment box "funny" is not there then only add those buttons
    let button1 = document.createElement("button");
    let button2 = document.createElement("button");
    let button3 = document.createElement("button");
    let button4 = document.createElement("button");
    let button5 = document.createElement("button");
    let button6 = document.createElement("button");

    button1.textContent = "Funny";
    button2.textContent = "Serious";
    button3.textContent = "Helpful";
    button4.textContent = "Disagree";
    button5.textContent = "Strongly Agree";
    button6.textContent = "Insightful";

    button1.classList.add("Funny");
    button2.classList.add("Serious");
    button3.classList.add("Helpful");
    button4.classList.add("Disagree");
    button5.classList.add("Strongly_Agree");
    button6.classList.add("Insightful");

    const buttonStyle = {
      backgroundColor: "#b92b27",
      color: "white",
      border: "none",
      padding: "10px 20px",
      borderRadius: "5px",
      cursor: "pointer",
      margin: "5px",
    };

    const button1Style = {
      marginLeft: "70px",
    };
    // const button5Style = {
    //   marginLeft: "70px",
    // };

    Object.assign(button1.style, buttonStyle, button1Style);
    Object.assign(button2.style, buttonStyle);
    Object.assign(button3.style, buttonStyle);
    Object.assign(button4.style, buttonStyle);
    Object.assign(button5.style, buttonStyle);
    Object.assign(button6.style, buttonStyle);

    sectionElement.insertAdjacentElement("afterend", button6);
    sectionElement.insertAdjacentElement("afterend", button5);
    sectionElement.insertAdjacentElement("afterend", button4);
    sectionElement.insertAdjacentElement("afterend", button3);
    sectionElement.insertAdjacentElement("afterend", button2);
    sectionElement.insertAdjacentElement("afterend", button1);
  }
}
async function typeTextSlowly(element, text, speed = 20) {
  element.textContent = "";
  for (let char of text) {
    element.textContent += char;
    await new Promise((resolve) => setTimeout(resolve, speed));
  }
}

async function postData(url = "", data = {}) {
  const response = await fetch(url, {
    method: "POST",
    mode: "cors",
    cache: "no-cache",
    credentials: "same-origin",
    headers: {
      "Content-Type": "application/json",
    },
    redirect: "follow",
    referrerPolicy: "no-referrer",
    body: JSON.stringify(data),
  });
  return response.json();
}
